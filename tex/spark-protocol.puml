@startuml

'define icons
control Driver
participant "Job Committer"
control Executor
participant "Task Committer"
participant Operation

' protocol
'== Initialization ==

Driver -> "Job Committer": setupJob()

== For Each Task Attempt ==
Driver -> Executor: execute work
Executor -> "Task Committer": setupTask()
Executor --> Operation: execute
"Task Committer" <-- Operation: newTaskTempFile
"Task Committer" --> Operation: tempFile

"Task Committer" <-- Operation: newTaskTempFileAbsPath
"Task Committer" --> Operation: tempFileAbsPath

Executor <-- Operation: finished

' now look at the commit protocol
Executor -> "Task Committer": needsTaskCommit()?
Executor <-- "Task Committer": <true | false>

alt needsTaskCommit == true
  Executor -> "Driver": AskPermissionToCommitOutput
  alt permission to commit granted
    Executor -> "Task Committer": commitTask()
    Executor <-- "Task Committer": TaskCommitMessage
    Executor -> Driver : Success + TaskCommitMessage
  else
    Executor -> Driver : TaskCommitDenied
  end
else needsTaskCommit == false
  Executor -> "Task Committer": abortTask()
  Executor <-- "Task Committer": aborted task
  Executor -> Driver : Success
end


== Job Commit==


Driver -> "Job Committer": commitJob(TaskCommitMessage+)
Driver <-- "Job Committer": committed job
Driver -> "Job Committer": cleanupJob()


@enduml
